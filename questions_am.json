{
  "title": "高度情報技術者試験 午前Ⅰ・Ⅱ問題集（全60問）",
  "sections": [
    {
      "id": "computer-system",
      "title": "コンピュータシステム",
      "questions": [
        {
          "type": "single_choice",
          "question": "コンピュータの主記憶装置に関する記述として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "電源を切っても記憶内容を保持する。"
            },
            {
              "value": "b",
              "text": "CPUと直接データをやり取りできる。"
            },
            {
              "value": "c",
              "text": "補助記憶装置よりも大容量である。"
            },
            {
              "value": "d",
              "text": "レジスタよりも高速である。"
            }
          ],
          "correct": "b",
          "explanation": "主記憶装置（RAM）はCPUが直接アクセスして読み書きできる記憶装置であり、処理中のデータやプログラムを保持する。電源を切ると内容は消える（揮発性）。"
        },
        {
          "type": "single_choice",
          "question": "RISCプロセッサの特徴として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "複雑な命令を一命令で実行する。"
            },
            {
              "value": "b",
              "text": "マイクロプログラム制御方式を採用している。"
            },
            {
              "value": "c",
              "text": "命令あたりの実行クロック数が多い。"
            },
            {
              "value": "d",
              "text": "命令の実行をパイプライン化しやすい。"
            }
          ],
          "correct": "d",
          "explanation": "RISC（Reduced Instruction Set Computer）は単純な命令セットをもち、命令の長さが均一であるため、命令のパイプライン処理がしやすい。"
        },
        {
          "type": "single_choice",
          "question": "2の補数表現に関する記述として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "負の数を表現するのに符号ビットを用いない。"
            },
            {
              "value": "b",
              "text": "正の数と負の数で0の表現が異なる。"
            },
            {
              "value": "c",
              "text": "加算器で減算を行うことができる。"
            },
            {
              "value": "d",
              "text": "ビット反転で負数を表現する。"
            }
          ],
          "correct": "c",
          "explanation": "2の補数表現では、正の数と負の数を同じ加算回路で扱うことができ、減算も加算器で処理できるのが特徴。"
        },
        {
          "type": "single_choice",
          "question": "キャッシュメモリの役割として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "補助記憶装置の故障に備えてバックアップをとる。"
            },
            {
              "value": "b",
              "text": "CPUと主記憶の間の速度差を緩和する。"
            },
            {
              "value": "c",
              "text": "主記憶装置の内容を暗号化する。"
            },
            {
              "value": "d",
              "text": "主記憶の使用量を減らすために仮想記憶として使う。"
            }
          ],
          "correct": "b",
          "explanation": "キャッシュメモリは、CPUと主記憶の間に置かれる高速なメモリで、よく使われるデータを一時的に保持し、アクセス速度を向上させる。"
        },
        {
          "type": "single_choice",
          "question": "フラグメント（断片化）の解消方法として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "RAIDによる冗長構成をとる。"
            },
            {
              "value": "b",
              "text": "スワッピングを使用する。"
            },
            {
              "value": "c",
              "text": "デフラグメンテーションを行う。"
            },
            {
              "value": "d",
              "text": "キャッシュメモリを拡張する。"
            }
          ],
          "correct": "c",
          "explanation": "フラグメントとは、ファイルがディスク上で分断されている状態で、アクセス効率が低下する。デフラグメンテーションによって連続領域に再配置できる。"
        },
        {
          "type": "single_choice",
          "question": "SSDの特徴として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "磁気ディスクを使用し、大容量を実現している。"
            },
            {
              "value": "b",
              "text": "可動部品があり、機械的にデータを読み書きする。"
            },
            {
              "value": "c",
              "text": "フラッシュメモリを使用し、高速アクセスが可能。"
            },
            {
              "value": "d",
              "text": "読み書きのたびにトラックのシークが必要となる。"
            }
          ],
          "correct": "c",
          "explanation": "SSDはフラッシュメモリを使った記憶装置で、HDDに比べて可動部品がなく、アクセス速度が高速なのが特徴。"
        },
        {
          "type": "single_choice",
          "question": "仮想記憶に関する記述のうち、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "主記憶装置の容量を増やす技術である。"
            },
            {
              "value": "b",
              "text": "主記憶と補助記憶を組み合わせて大容量を実現する。"
            },
            {
              "value": "c",
              "text": "CPUの処理速度を向上させる技術である。"
            },
            {
              "value": "d",
              "text": "プログラムをコンパイルせずに直接実行する技術である。"
            }
          ],
          "correct": "b",
          "explanation": "仮想記憶は、主記憶に収まりきらないデータを補助記憶に退避させ、見かけ上の大容量メモリを提供する。"
        },
        {
          "type": "single_choice",
          "question": "DMA（Direct Memory Access）方式の特徴として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "入出力装置がCPUを介してメモリにアクセスする。"
            },
            {
              "value": "b",
              "text": "CPUを経由せずにメモリに直接アクセスする。"
            },
            {
              "value": "c",
              "text": "CPUのレジスタを直接操作して高速化する。"
            },
            {
              "value": "d",
              "text": "CPUとメモリのデータ転送を直列化する。"
            }
          ],
          "correct": "b",
          "explanation": "DMA方式は、CPUを介さずに周辺装置がメモリと直接データのやり取りを行う方式で、CPUの負荷を軽減できる。"
        },
        {
          "type": "single_choice",
          "question": "ジョブスケジューリングにおけるラウンドロビン方式の特徴はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "優先度の高いジョブを常に先に実行する。"
            },
            {
              "value": "b",
              "text": "ジョブの実行順をランダムに決定する。"
            },
            {
              "value": "c",
              "text": "同一の実行時間単位でジョブにCPUを割り当てる。"
            },
            {
              "value": "d",
              "text": "CPUバウンドな処理を優先して実行する。"
            }
          ],
          "correct": "c",
          "explanation": "ラウンドロビン方式は、各ジョブに一定の時間（タイムクォンタム）でCPUを割り当て、順番に切り替えるプリエンプティブなスケジューリング方式。"
        },
        {
          "type": "single_choice",
          "question": "スループットに関する説明として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "システムが応答を返すまでの時間。"
            },
            {
              "value": "b",
              "text": "ジョブ1件あたりに要する平均処理時間。"
            },
            {
              "value": "c",
              "text": "単位時間当たりのジョブ処理件数。"
            },
            {
              "value": "d",
              "text": "ユーザが操作してから画面が表示されるまでの時間。"
            }
          ],
          "correct": "c",
          "explanation": "スループットとは、単位時間当たりに完了できる処理の量（件数）のことで、システム全体の処理能力を示す指標である。"
        }
      ]
    },
    {
      "id": "system-development",
      "title": "システム開発技術",
      "questions": [
        {
          "type": "single_choice",
          "question": "ウォータフォールモデルの特徴として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "開発工程を反復的に繰り返す。"
            },
            {
              "value": "b",
              "text": "各工程を順序立てて一方向に進める。"
            },
            {
              "value": "c",
              "text": "仕様変更に柔軟に対応できる。"
            },
            {
              "value": "d",
              "text": "顧客との頻繁なフィードバックを重視する。"
            }
          ],
          "correct": "b",
          "explanation": "ウォータフォールモデルは、要件定義から設計、実装、テストまでの工程を一方向に進める開発手法であり、工程の巻き戻しが難しい。"
        },
        {
          "type": "single_choice",
          "question": "アジャイル開発におけるスクラムの特徴として、適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "全工程を一括して計画・実行する。"
            },
            {
              "value": "b",
              "text": "開発チーム外の人がスプリントを管理する。"
            },
            {
              "value": "c",
              "text": "開発を短い期間で区切って繰り返す。"
            },
            {
              "value": "d",
              "text": "ウォータフォールモデルに基づく管理手法である。"
            }
          ],
          "correct": "c",
          "explanation": "スクラムはアジャイル開発の一種で、スプリントと呼ばれる短期間の反復作業を通じて開発を進める。"
        },
        {
          "type": "single_choice",
          "question": "プロトタイピングモデルの主な目的として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "処理性能を最大限に引き上げる。"
            },
            {
              "value": "b",
              "text": "初期段階で完成品と同等の品質を確保する。"
            },
            {
              "value": "c",
              "text": "ユーザの要求を具体的に把握する。"
            },
            {
              "value": "d",
              "text": "ソフトウェアの再利用性を高める。"
            }
          ],
          "correct": "c",
          "explanation": "プロトタイピングモデルは試作品（プロトタイプ）を作成し、ユーザとの対話を通じて要求を明確化することが目的である。"
        },
        {
          "type": "single_choice",
          "question": "PERT図におけるクリティカルパスに関する記述として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "最も短い作業経路である。"
            },
            {
              "value": "b",
              "text": "全作業のうち、遅延しても影響がない作業経路である。"
            },
            {
              "value": "c",
              "text": "全体のプロジェクト期間に影響を与える経路である。"
            },
            {
              "value": "d",
              "text": "一番コストのかかる経路である。"
            }
          ],
          "correct": "c",
          "explanation": "クリティカルパスは、PERT図において最も時間がかかる経路であり、プロジェクト全体の期間に影響する。"
        },
        {
          "type": "single_choice",
          "question": "結合テストにおけるドライバの役割として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "下位モジュールを代用する。"
            },
            {
              "value": "b",
              "text": "上位モジュールを代用する。"
            },
            {
              "value": "c",
              "text": "モジュール内の誤りを修正する。"
            },
            {
              "value": "d",
              "text": "デバッグログを出力する。"
            }
          ],
          "correct": "b",
          "explanation": "ドライバは、結合テスト時に上位モジュールが未完成な場合に代わりとなるテスト用モジュールである。"
        },
        {
          "type": "single_choice",
          "question": "ソフトウェアの品質特性において、保守性に該当するものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "障害発生時に早期に復旧できる。"
            },
            {
              "value": "b",
              "text": "利用者が容易に操作できる。"
            },
            {
              "value": "c",
              "text": "変更が容易で、保守しやすい。"
            },
            {
              "value": "d",
              "text": "異なるOSでも動作する。"
            }
          ],
          "correct": "c",
          "explanation": "保守性はソフトウェア品質の一要素であり、修正や機能追加を行いやすいかどうかを示す。"
        },
        {
          "type": "single_choice",
          "question": "ベースラインに関する説明として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "最も基本的な設計思想。"
            },
            {
              "value": "b",
              "text": "開発の起点となる技術要素。"
            },
            {
              "value": "c",
              "text": "変更管理の基準となる確定文書。"
            },
            {
              "value": "d",
              "text": "テストに必要な最小限のコード。"
            }
          ],
          "correct": "c",
          "explanation": "ベースラインとは、レビュー等を経て確定した成果物であり、以後の変更管理の基準となる。"
        },
        {
          "type": "single_choice",
          "question": "ソフトウェア開発プロジェクトにおけるリスクマネジメントの第一歩として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "リスクの影響度を分析する。"
            },
            {
              "value": "b",
              "text": "リスクの発生確率を見積もる。"
            },
            {
              "value": "c",
              "text": "リスクを洗い出す。"
            },
            {
              "value": "d",
              "text": "リスク対策計画を立案する。"
            }
          ],
          "correct": "c",
          "explanation": "リスクマネジメントの最初のステップは、リスクの特定（洗い出し）である。"
        },
        {
          "type": "single_choice",
          "question": "CMMIにおけるプロセス成熟度レベル2の特徴はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "プロセスが初期状態で管理されていない。"
            },
            {
              "value": "b",
              "text": "プロジェクトごとにプロセスが管理されている。"
            },
            {
              "value": "c",
              "text": "全社的な標準プロセスが確立されている。"
            },
            {
              "value": "d",
              "text": "プロセスの最適化と継続的改善が行われている。"
            }
          ],
          "correct": "b",
          "explanation": "CMMIレベル2は「管理されたレベル」であり、個々のプロジェクトにおいてプロセスが計画的に管理されている。"
        },
        {
          "type": "single_choice",
          "question": "インスペクションの目的として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "テスト結果の統計的分析を行う。"
            },
            {
              "value": "b",
              "text": "ソースコードの構文エラーを検出する。"
            },
            {
              "value": "c",
              "text": "文書や設計書などの誤りを人手で検出する。"
            },
            {
              "value": "d",
              "text": "負荷試験における応答時間を測定する。"
            }
          ],
          "correct": "c",
          "explanation": "インスペクションはソフトウェア開発の品質保証活動の一つで、レビューにより文書や成果物の誤りを人手で検出する。"
        }
      ]
    },
    {
      "id": "network",
      "title": "ネットワーク",
      "questions": [
        {
          "type": "single_choice",
          "question": "OSI基本参照モデルにおけるトランスポート層の主な役割はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "データの物理的伝送を行う。"
            },
            {
              "value": "b",
              "text": "通信経路の選定を行う。"
            },
            {
              "value": "c",
              "text": "エンドツーエンドの信頼性を提供する。"
            },
            {
              "value": "d",
              "text": "アプリケーションとのインタフェースを提供する。"
            }
          ],
          "correct": "c",
          "explanation": "トランスポート層は、通信する端末間での信頼性のあるデータ転送を提供する層で、TCPなどが該当する。"
        },
        {
          "type": "single_choice",
          "question": "LANにおけるスイッチングハブの機能として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "送信元IPアドレスに基づいてルーティングする。"
            },
            {
              "value": "b",
              "text": "MACアドレスを学習してフレーム転送する。"
            },
            {
              "value": "c",
              "text": "同一ネットワーク内のブロードキャストを遮断する。"
            },
            {
              "value": "d",
              "text": "ネットワーク層でパケットをフィルタする。"
            }
          ],
          "correct": "b",
          "explanation": "スイッチングハブはMACアドレスに基づいてフレームを適切なポートに転送する。"
        },
        {
          "type": "single_choice",
          "question": "DNSに関する説明として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "IPアドレスからMACアドレスを解決する。"
            },
            {
              "value": "b",
              "text": "ドメイン名とIPアドレスの対応を管理する。"
            },
            {
              "value": "c",
              "text": "メールサーバの暗号化を行う。"
            },
            {
              "value": "d",
              "text": "動的IPアドレスを固定する。"
            }
          ],
          "correct": "b",
          "explanation": "DNS（Domain Name System）は、ドメイン名をIPアドレスに変換するための分散型データベースシステムである。"
        },
        {
          "type": "single_choice",
          "question": "IPv6の特徴として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "IPv4と同様に32ビットのアドレス空間を持つ。"
            },
            {
              "value": "b",
              "text": "NATが必要不可欠である。"
            },
            {
              "value": "c",
              "text": "アドレス空間が128ビットに拡張されている。"
            },
            {
              "value": "d",
              "text": "IPヘッダがIPv4よりも複雑である。"
            }
          ],
          "correct": "c",
          "explanation": "IPv6は128ビットのアドレス空間を持ち、理論上ほぼ無限のIPアドレスを提供することができる。"
        },
        {
          "type": "single_choice",
          "question": "TCPとUDPの違いとして、適切な説明はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "TCPはコネクションレスである。"
            },
            {
              "value": "b",
              "text": "UDPは信頼性の高いデータ転送を行う。"
            },
            {
              "value": "c",
              "text": "TCPはデータの順序性を保証する。"
            },
            {
              "value": "d",
              "text": "UDPは輻輳制御を行う。"
            }
          ],
          "correct": "c",
          "explanation": "TCPはコネクション型で信頼性を保証し、受信順にデータを届ける。UDPはコネクションレスで、順序保証は行わない。"
        },
        {
          "type": "single_choice",
          "question": "IPパケットのフラグメンテーション（断片化）に関する記述として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "フラグメントは必ずIP層で再構築される。"
            },
            {
              "value": "b",
              "text": "フラグメンテーションはTCP層で行う。"
            },
            {
              "value": "c",
              "text": "MTUより大きいパケットは分割される。"
            },
            {
              "value": "d",
              "text": "UDPパケットでは断片化できない。"
            }
          ],
          "correct": "c",
          "explanation": "IPパケットがMTU（最大転送単位）を超える場合、ネットワーク層でフラグメンテーションが行われる。"
        },
        {
          "type": "single_choice",
          "question": "ネットワークにおけるARPの役割はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "IPアドレスをDNS名に変換する。"
            },
            {
              "value": "b",
              "text": "ドメイン名をIPアドレスに変換する。"
            },
            {
              "value": "c",
              "text": "IPアドレスからMACアドレスを求める。"
            },
            {
              "value": "d",
              "text": "MACアドレスからIPアドレスを求める。"
            }
          ],
          "correct": "c",
          "explanation": "ARP（Address Resolution Protocol）は、IPアドレスに対応するMACアドレスを取得するためのプロトコル。"
        },
        {
          "type": "single_choice",
          "question": "HTTPの特徴として、最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "常に双方向通信を行う。"
            },
            {
              "value": "b",
              "text": "ステートフルなプロトコルである。"
            },
            {
              "value": "c",
              "text": "テキストベースのアプリケーション層プロトコルである。"
            },
            {
              "value": "d",
              "text": "暗号化が標準で組み込まれている。"
            }
          ],
          "correct": "c",
          "explanation": "HTTPはテキストベースで動作するアプリケーション層のプロトコルで、ステートレスである。暗号化はHTTPSで提供される。"
        },
        {
          "type": "single_choice",
          "question": "ファイアウォールの主な目的はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "ウイルスの検出と除去。"
            },
            {
              "value": "b",
              "text": "LAN内のファイル共有。"
            },
            {
              "value": "c",
              "text": "不正なアクセスの遮断。"
            },
            {
              "value": "d",
              "text": "ネットワーク速度の向上。"
            }
          ],
          "correct": "c",
          "explanation": "ファイアウォールは、外部ネットワークからの不正なアクセスを検出・遮断し、内部ネットワークの安全性を保つ。"
        },
        {
          "type": "single_choice",
          "question": "SMTPの用途として正しいものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "Webページの送信。"
            },
            {
              "value": "b",
              "text": "ファイル転送。"
            },
            {
              "value": "c",
              "text": "電子メールの送信。"
            },
            {
              "value": "d",
              "text": "ネットワークの経路制御。"
            }
          ],
          "correct": "c",
          "explanation": "SMTP（Simple Mail Transfer Protocol）は、電子メールの送信に用いられるプロトコル。"
        }
      ]
    },
    {
      "id": "database",
      "title": "データベース",
      "questions": [
        {
          "type": "single_choice",
          "question": "関係データベースにおける正規化の主な目的はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "データベースのアクセス速度を向上させる。"
            },
            {
              "value": "b",
              "text": "テーブルの行数を最大化する。"
            },
            {
              "value": "c",
              "text": "データの冗長性を排除し、整合性を保つ。"
            },
            {
              "value": "d",
              "text": "SQL文の記述を簡素化する。"
            }
          ],
          "correct": "c",
          "explanation": "正規化はデータの冗長性を排除し、整合性を高めることで更新異常などを防止することが目的である。"
        },
        {
          "type": "single_choice",
          "question": "ACID特性において、一貫性（Consistency）の説明として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "トランザクションは途中で中断されてもそのまま継続できる。"
            },
            {
              "value": "b",
              "text": "データベースは常に整合性制約を満たす状態を維持する。"
            },
            {
              "value": "c",
              "text": "複数のトランザクションを並列実行する。"
            },
            {
              "value": "d",
              "text": "ログを使用してトランザクションを復元する。"
            }
          ],
          "correct": "b",
          "explanation": "一貫性とは、トランザクション実行前後でデータベースが整合性制約を満たした状態を保つことを意味する。"
        },
        {
          "type": "single_choice",
          "question": "トランザクション分離レベル「REPEATABLE READ」で防止できない現象はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "ファントムリード"
            },
            {
              "value": "b",
              "text": "ダーティリード"
            },
            {
              "value": "c",
              "text": "ノンリピータブルリード"
            },
            {
              "value": "d",
              "text": "更新のロスト"
            }
          ],
          "correct": "a",
          "explanation": "REPEATABLE READではダーティリードやノンリピータブルリードを防げるが、範囲クエリによるファントムリードは防げない。"
        },
        {
          "type": "single_choice",
          "question": "インデックスの使用によって向上が期待できる性能はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "データの整合性"
            },
            {
              "value": "b",
              "text": "SQL文の簡素化"
            },
            {
              "value": "c",
              "text": "データ検索の高速化"
            },
            {
              "value": "d",
              "text": "トランザクションの耐障害性"
            }
          ],
          "correct": "c",
          "explanation": "インデックスは、データベースにおいて検索対象の絞り込みを高速に行うための構造である。"
        },
        {
          "type": "single_choice",
          "question": "ER図における「1対多」の関係を表すのに最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "各エンティティが1つの属性を持つ。"
            },
            {
              "value": "b",
              "text": "Aエンティティの1つに対して、Bエンティティが複数対応する。"
            },
            {
              "value": "c",
              "text": "AエンティティとBエンティティが相互に排他的である。"
            },
            {
              "value": "d",
              "text": "AエンティティがBエンティティの主キーを持つ。"
            }
          ],
          "correct": "b",
          "explanation": "ER図の1対多（1:N）関係では、片方のエンティティがもう一方の複数のインスタンスと対応している。"
        },
        {
          "type": "single_choice",
          "question": "ビュー（View）に関する説明として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "物理的にデータを保持するテーブルである。"
            },
            {
              "value": "b",
              "text": "更新は必ず元のテーブルにも反映されるとは限らない。"
            },
            {
              "value": "c",
              "text": "トリガの一種である。"
            },
            {
              "value": "d",
              "text": "ビューにはインデックスを作成できる。"
            }
          ],
          "correct": "b",
          "explanation": "ビューは仮想的な表であり、更新可能なビューでない限り元のテーブルに変更は反映されない。"
        },
        {
          "type": "single_choice",
          "question": "リレーショナルデータベースにおける外部キー制約の目的はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "主キーの一意性を保つ。"
            },
            {
              "value": "b",
              "text": "他のテーブルとの整合性を保つ。"
            },
            {
              "value": "c",
              "text": "SQL文の実行速度を上げる。"
            },
            {
              "value": "d",
              "text": "NULL値の挿入を防ぐ。"
            }
          ],
          "correct": "b",
          "explanation": "外部キー制約は、参照整合性を保つために使用され、参照先に存在しない値の挿入を防ぐ。"
        },
        {
          "type": "single_choice",
          "question": "SQL文「SELECT COUNT(*) FROM 顧客 WHERE 地域 = '関東';」の意味として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "関東地域の顧客名をすべて表示する。"
            },
            {
              "value": "b",
              "text": "関東地域に属する顧客の件数を数える。"
            },
            {
              "value": "c",
              "text": "関東地域以外の顧客を削除する。"
            },
            {
              "value": "d",
              "text": "顧客テーブルの全件を出力する。"
            }
          ],
          "correct": "b",
          "explanation": "このSQLは、地域が「関東」であるレコードの件数を返す集計クエリである。"
        },
        {
          "type": "single_choice",
          "question": "レプリケーションの目的として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "データの完全削除を自動化する。"
            },
            {
              "value": "b",
              "text": "複数データベース間でデータの同期を保つ。"
            },
            {
              "value": "c",
              "text": "パフォーマンスチューニングを行う。"
            },
            {
              "value": "d",
              "text": "SQLインジェクションを防止する。"
            }
          ],
          "correct": "b",
          "explanation": "レプリケーションは、データベースの複製を維持し、障害対策や負荷分散に用いられる。"
        },
        {
          "type": "single_choice",
          "question": "OLAP処理におけるドリルダウン操作の説明として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "詳細レベルから集約レベルへ移行する。"
            },
            {
              "value": "b",
              "text": "データを時系列で並べ替える。"
            },
            {
              "value": "c",
              "text": "集約されたデータからより詳細なデータへ移行する。"
            },
            {
              "value": "d",
              "text": "データベースの正規化を行う。"
            }
          ],
          "correct": "c",
          "explanation": "ドリルダウンは、OLAPにおいて集約されたデータをより細かい粒度に分解して分析する操作である。"
        }
      ]
    },
    {
      "id": "security",
      "title": "セキュリティ",
      "questions": [
        {
          "type": "single_choice",
          "question": "公開鍵暗号方式において、受信者が秘密鍵で復号できるようにするためには、送信者は何を使って暗号化すべきか？",
          "choices": [
            {
              "value": "a",
              "text": "受信者の秘密鍵"
            },
            {
              "value": "b",
              "text": "送信者の秘密鍵"
            },
            {
              "value": "c",
              "text": "受信者の公開鍵"
            },
            {
              "value": "d",
              "text": "送信者の公開鍵"
            }
          ],
          "correct": "c",
          "explanation": "公開鍵暗号では、受信者の公開鍵で暗号化し、対応する秘密鍵で復号する。これにより送信者と受信者以外には内容を解読できない。"
        },
        {
          "type": "single_choice",
          "question": "パスワードクラックの手法のうち、辞書攻撃（dictionary attack）の特徴として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "すべての文字の組合せを総当たりで試す。"
            },
            {
              "value": "b",
              "text": "事前に用意された単語リストで試行する。"
            },
            {
              "value": "c",
              "text": "複数のパスワードを同時に解析する。"
            },
            {
              "value": "d",
              "text": "ユーザのメールアドレスを利用する。"
            }
          ],
          "correct": "b",
          "explanation": "辞書攻撃は、一般的な単語やよく使われるパスワードをまとめたリストを使って照合する手法である。"
        },
        {
          "type": "single_choice",
          "question": "SQLインジェクションに該当する攻撃内容として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "ファイルを暗号化して復元を要求する。"
            },
            {
              "value": "b",
              "text": "Webアプリケーションに不正なSQL文を埋め込む。"
            },
            {
              "value": "c",
              "text": "ネットワーク経路を盗聴する。"
            },
            {
              "value": "d",
              "text": "別のユーザのセッションIDを取得する。"
            }
          ],
          "correct": "b",
          "explanation": "SQLインジェクションは、入力フィールドにSQL構文を埋め込み、データベースに対して不正な命令を実行させる攻撃。"
        },
        {
          "type": "single_choice",
          "question": "WAF（Web Application Firewall）の役割として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "ネットワーク層のトラフィックを監視する。"
            },
            {
              "value": "b",
              "text": "Webアプリケーションへの攻撃を検出・遮断する。"
            },
            {
              "value": "c",
              "text": "ファイルの暗号化を行う。"
            },
            {
              "value": "d",
              "text": "マルウェアを隔離・削除する。"
            }
          ],
          "correct": "b",
          "explanation": "WAFはWebアプリケーションに特化したファイアウォールで、SQLインジェクションやクロスサイトスクリプティングなどを防ぐ。"
        },
        {
          "type": "single_choice",
          "question": "電子署名の機能として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "通信経路の暗号化"
            },
            {
              "value": "b",
              "text": "メッセージの圧縮"
            },
            {
              "value": "c",
              "text": "送信者の認証と改ざん検出"
            },
            {
              "value": "d",
              "text": "ウイルスの検出"
            }
          ],
          "correct": "c",
          "explanation": "電子署名は、送信者が誰かを証明し、メッセージが改ざんされていないことを保証する。"
        },
        {
          "type": "single_choice",
          "question": "マルウェアの一種であるトロイの木馬の特徴はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "自己増殖して他のファイルに感染する。"
            },
            {
              "value": "b",
              "text": "ネットワーク経由で他のPCに拡散する。"
            },
            {
              "value": "c",
              "text": "正規ソフトに偽装して不正な動作を行う。"
            },
            {
              "value": "d",
              "text": "マクロ機能を悪用して感染する。"
            }
          ],
          "correct": "c",
          "explanation": "トロイの木馬は、正規のソフトに偽装してユーザにインストールさせ、不正な動作を行うマルウェアである。"
        },
        {
          "type": "single_choice",
          "question": "ISMS（情報セキュリティマネジメントシステム）の目的はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "ネットワーク構成の効率化"
            },
            {
              "value": "b",
              "text": "組織全体で情報セキュリティを管理・改善する仕組みの構築"
            },
            {
              "value": "c",
              "text": "サーバの運用自動化"
            },
            {
              "value": "d",
              "text": "ソフトウェア開発の高速化"
            }
          ],
          "correct": "b",
          "explanation": "ISMSは、情報セキュリティに関するリスクを組織的に管理・改善するための枠組みである。"
        },
        {
          "type": "single_choice",
          "question": "クロスサイトスクリプティング（XSS）の被害例として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "通信の途中でデータが改ざんされる。"
            },
            {
              "value": "b",
              "text": "攻撃者のスクリプトがユーザのブラウザで実行される。"
            },
            {
              "value": "c",
              "text": "攻撃者が偽のWebサイトを作成する。"
            },
            {
              "value": "d",
              "text": "データベースの内容がすべて消去される。"
            }
          ],
          "correct": "b",
          "explanation": "XSSは、Webページに悪意あるスクリプトを埋め込み、閲覧ユーザのブラウザ上で不正に実行させる攻撃である。"
        },
        {
          "type": "single_choice",
          "question": "認証において多要素認証（MFA）の要素に含まれないものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "知識情報（パスワードなど）"
            },
            {
              "value": "b",
              "text": "所持情報（スマートフォンなど）"
            },
            {
              "value": "c",
              "text": "生体情報（指紋など）"
            },
            {
              "value": "d",
              "text": "IPアドレスの国別判定"
            }
          ],
          "correct": "d",
          "explanation": "MFAは「知識」「所持」「生体」の異なる認証要素を組み合わせる。IPアドレスの地域判定は補助的情報にすぎない。"
        },
        {
          "type": "single_choice",
          "question": "バックドアに関する説明として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "正規のログイン手段を使ってシステムに入る。"
            },
            {
              "value": "b",
              "text": "セキュリティ対策ソフトを削除するプログラム。"
            },
            {
              "value": "c",
              "text": "不正アクセス者が裏口として設けた侵入口。"
            },
            {
              "value": "d",
              "text": "メールを盗聴するための装置。"
            }
          ],
          "correct": "c",
          "explanation": "バックドアは、正規の認証を回避してシステムにアクセスするために設けられた不正な裏口である。"
        }
      ]
    },
    {
      "id": "software-design",
      "title": "ソフトウェア設計",
      "questions": [
        {
          "type": "single_choice",
          "question": "オブジェクト指向設計におけるカプセル化の説明として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "クラスを継承して機能を拡張すること"
            },
            {
              "value": "b",
              "text": "データとその操作を一体化し、外部からのアクセスを制限すること"
            },
            {
              "value": "c",
              "text": "複数のクラスで同じメソッド名を使うこと"
            },
            {
              "value": "d",
              "text": "インスタンスを動的に生成すること"
            }
          ],
          "correct": "b",
          "explanation": "カプセル化は、データとその処理をひとつのまとまり（クラス）にして、内部の実装を隠蔽し外部とのインタフェースを制限する概念である。"
        },
        {
          "type": "single_choice",
          "question": "ソフトウェアのモジュール結合度に関する説明として、最も結合度が低いのはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "内容結合"
            },
            {
              "value": "b",
              "text": "制御結合"
            },
            {
              "value": "c",
              "text": "スタンプ結合"
            },
            {
              "value": "d",
              "text": "データ結合"
            }
          ],
          "correct": "d",
          "explanation": "データ結合は、モジュール間が単純なデータ項目を受け渡すのみで連携するため、結合度が最も低く保守性が高い。"
        },
        {
          "type": "single_choice",
          "question": "ソフトウェアアーキテクチャにおけるMVCモデルの「C」に該当するコンポーネントはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "View"
            },
            {
              "value": "b",
              "text": "Controller"
            },
            {
              "value": "c",
              "text": "Client"
            },
            {
              "value": "d",
              "text": "Component"
            }
          ],
          "correct": "b",
          "explanation": "MVCモデルのCはControllerを指し、ユーザの入力に応じてModelやViewを制御する役割を担う。"
        },
        {
          "type": "single_choice",
          "question": "状態遷移図において、状態とは何を表すものか。",
          "choices": [
            {
              "value": "a",
              "text": "操作の記録順序"
            },
            {
              "value": "b",
              "text": "オブジェクトの属性を記録する表"
            },
            {
              "value": "c",
              "text": "システムまたはオブジェクトがある特定の条件を満たすときの内部状況"
            },
            {
              "value": "d",
              "text": "ソフトウェアの開発進捗"
            }
          ],
          "correct": "c",
          "explanation": "状態遷移図における状態とは、ある入力に対する出力や振る舞いが決まるオブジェクトの内部状況を意味する。"
        },
        {
          "type": "single_choice",
          "question": "ユースケース図におけるアクターの役割として最も適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "クラス間の継承関係を示す"
            },
            {
              "value": "b",
              "text": "外部システムまたはユーザなど、システムと相互作用する存在を示す"
            },
            {
              "value": "c",
              "text": "システム内部のオブジェクトを抽象化する"
            },
            {
              "value": "d",
              "text": "プロジェクトの開発者を一覧化する"
            }
          ],
          "correct": "b",
          "explanation": "ユースケース図においてアクターは、システムとやり取りを行う外部の存在（ユーザ、他のシステムなど）を表す。"
        },
        {
          "type": "single_choice",
          "question": "デザインパターンの一種である「シングルトンパターン」の特徴はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "複数のクラスから継承できるようにする。"
            },
            {
              "value": "b",
              "text": "状態を共有する複数のインスタンスを作成する。"
            },
            {
              "value": "c",
              "text": "クラスのインスタンスを1つだけ生成し、それを共有する。"
            },
            {
              "value": "d",
              "text": "インスタンスの生成を呼び出し元に任せる。"
            }
          ],
          "correct": "c",
          "explanation": "シングルトンパターンは、インスタンスを1つだけ生成し、グローバルにアクセスできるようにする設計パターンである。"
        },
        {
          "type": "single_choice",
          "question": "クラス図における汎化（generalization）の関係として適切なものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "一方のクラスが他方を構成要素として含む。"
            },
            {
              "value": "b",
              "text": "一方のクラスが他方を操作として使用する。"
            },
            {
              "value": "c",
              "text": "あるクラスがより一般的なクラスから属性や操作を継承する。"
            },
            {
              "value": "d",
              "text": "2つのクラスが同じインタフェースを持つ。"
            }
          ],
          "correct": "c",
          "explanation": "汎化は、サブクラスがスーパークラスから属性や操作を継承する関係で、クラス図では三角矢印で示される。"
        },
        {
          "type": "single_choice",
          "question": "モジュール設計における責務（responsibility）とは何を指すか。",
          "choices": [
            {
              "value": "a",
              "text": "モジュールが提供する機能や役割"
            },
            {
              "value": "b",
              "text": "モジュールのファイルサイズ"
            },
            {
              "value": "c",
              "text": "モジュール間の結合関係"
            },
            {
              "value": "d",
              "text": "設計書に記載するドキュメント量"
            }
          ],
          "correct": "a",
          "explanation": "責務とは、そのモジュールが果たすべき機能や役割のことで、単一責務の原則などの設計原則に影響する。"
        },
        {
          "type": "single_choice",
          "question": "ファンクションポイント法において計測対象となるものはどれか。",
          "choices": [
            {
              "value": "a",
              "text": "ソースコードの行数"
            },
            {
              "value": "b",
              "text": "ユーザに提供される機能の数や複雑さ"
            },
            {
              "value": "c",
              "text": "プロジェクトにかかる日数"
            },
            {
              "value": "d",
              "text": "プログラマの人数"
            }
          ],
          "correct": "b",
          "explanation": "ファンクションポイント法は、ユーザの視点で提供される機能の数や複雑さをもとにソフトウェアの規模を見積もる手法である。"
        },
        {
          "type": "single_choice",
          "question": "ドメイン駆動設計（DDD）におけるエンティティの特徴はどれか。",
          "choices": [
            {
              "value": "a",
              "text": "データの構造を定義するだけのクラスである。"
            },
            {
              "value": "b",
              "text": "ライフサイクルにわたって同一性が重要なオブジェクトである。"
            },
            {
              "value": "c",
              "text": "アプリケーションサービス層に属する。"
            },
            {
              "value": "d",
              "text": "ドメインイベントの発行元である。"
            }
          ],
          "correct": "b",
          "explanation": "DDDにおけるエンティティは、識別子を持ち、時間の経過に関係なく一意に識別されるオブジェクトである。"
        }
      ]
    }
  ]
}